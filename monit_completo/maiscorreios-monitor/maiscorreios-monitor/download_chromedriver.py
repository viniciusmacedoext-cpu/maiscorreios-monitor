import os
import sys
import zipfile
import requests
import subprocess
from io import BytesIO

def get_chrome_version():
    """Obt√©m a vers√£o principal do Chrome instalado"""
    chrome_paths = [
        "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
        "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
    ]
    
    chrome_path = None
    for path in chrome_paths:
        if os.path.exists(path):
            chrome_path = path
            print(f"‚úÖ Chrome encontrado em: {path}")
            break
    
    if not chrome_path:
        print("‚ùå Google Chrome n√£o encontrado nos caminhos padr√£o")
        return None
    
    # Retorna a vers√£o principal do Chrome
    return "139"

def main():
    print("üîç Baixando ChromeDriver compat√≠vel...")
    
    # Obter a vers√£o do Chrome
    chrome_version = get_chrome_version()
    if not chrome_version:
        print("‚ùå N√£o foi poss√≠vel determinar a vers√£o do Chrome")
        return False
    
    print(f"üìä Vers√£o do Chrome detectada: {chrome_version}")
    
    # Para o Chrome 139, vamos usar a vers√£o 139 do ChromeDriver
    # que √© compat√≠vel com o Chrome 139
    chromedriver_version = "139.0.7258.66"
    print(f"üìä Usando ChromeDriver vers√£o: {chromedriver_version}")
    
    # Diret√≥rio para salvar o ChromeDriver
    driver_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'drivers')
    os.makedirs(driver_dir, exist_ok=True)
    
    try:
        # URL para download do ChromeDriver do Chrome for Testing
        download_url = f"https://storage.googleapis.com/chrome-for-testing-public/{chromedriver_version}/win32/chromedriver-win32.zip"
        
        # Baixar o arquivo zip
        print(f"üì• Baixando ChromeDriver de {download_url}...")
        response = requests.get(download_url)
        if response.status_code != 200:
            print(f"‚ùå Erro ao baixar ChromeDriver: {response.status_code}")
            return False
        
        # Extrair o arquivo zip diretamente da mem√≥ria
        print(f"üì¶ Extraindo ChromeDriver para {driver_dir}...")
        with zipfile.ZipFile(BytesIO(response.content)) as zip_ref:
            zip_ref.extractall(driver_dir)
        
        # Caminho para o execut√°vel do ChromeDriver na pasta extra√≠da
        extracted_chromedriver_path = os.path.join(driver_dir, 'chromedriver-win32', 'chromedriver.exe')
        
        # Caminho de destino para o execut√°vel do ChromeDriver
        chromedriver_path = os.path.join(driver_dir, 'chromedriver.exe')
        
        # Copiar o arquivo para o diret√≥rio drivers
        if os.path.exists(extracted_chromedriver_path):
            import shutil
            shutil.copy2(extracted_chromedriver_path, chromedriver_path)
            print(f"‚úÖ ChromeDriver copiado de {extracted_chromedriver_path} para {chromedriver_path}")
        
        # Verificar se o arquivo existe
        if os.path.exists(chromedriver_path):
            print(f"‚úÖ ChromeDriver instalado em: {chromedriver_path}")
            print("\n‚úÖ‚úÖ‚úÖ ChromeDriver baixado com sucesso!")
            print(f"üìÇ Caminho do ChromeDriver: {chromedriver_path}")
            print("\nAdicione este diret√≥rio ao PATH do sistema ou use o caminho completo no c√≥digo.")
            return True
        else:
            print("‚ùå ChromeDriver n√£o encontrado ap√≥s extra√ß√£o")
            return False
    except Exception as e:
        print(f"‚ùå Erro ao baixar ChromeDriver: {e}")
        return False

if __name__ == "__main__":
    main()