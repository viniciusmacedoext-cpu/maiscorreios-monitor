import os
import sys
import logging
from src.synthetic_engine import MaisCorreiosSyntheticEngine

# Configurar logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_synthetic_engine():
    print("üîç Testando o motor de testes sint√©ticos...")
    
    # Verificar se o Chrome est√° instalado
    chrome_paths = [
        "C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe",
        "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
    ]
    
    chrome_found = False
    for path in chrome_paths:
        if os.path.exists(path):
            chrome_found = True
            print(f"‚úÖ Chrome encontrado em: {path}")
            break
    
    if not chrome_found:
        print("‚ùå Google Chrome n√£o encontrado nos caminhos padr√£o")
        return False
    
    # Verificar se o ChromeDriver est√° dispon√≠vel
    drivers_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'drivers')
    chromedriver_path = os.path.join(drivers_dir, 'chromedriver.exe')
    
    if not os.path.exists(chromedriver_path):
        print(f"‚ùå ChromeDriver n√£o encontrado em: {chromedriver_path}")
        print("Execute o script download_chromedriver.py para baixar o ChromeDriver")
        return False
    
    print(f"‚úÖ ChromeDriver encontrado em: {chromedriver_path}")
    
    # Inicializar o motor de testes
    engine = MaisCorreiosSyntheticEngine(headless=False, timeout=30)
    
    try:
        # Testar configura√ß√£o do driver
        print("üîß Testando configura√ß√£o do driver...")
        if not engine.setup_driver():
            print("‚ùå Falha ao configurar driver")
            return False
        
        # Testar navega√ß√£o para um site simples
        print("üåê Testando navega√ß√£o para google.com...")
        if not engine.navigate_to("https://www.google.com"):
            print("‚ùå Falha ao navegar para google.com")
            return False
        
        # Tirar screenshot
        screenshot_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'test_screenshot.png')
        if engine.take_screenshot(screenshot_path):
            print(f"üì∏ Screenshot salvo em: {screenshot_path}")
        
        print("‚úÖ Teste de navega√ß√£o conclu√≠do com sucesso!")
        return True
    except Exception as e:
        print(f"‚ùå Erro durante o teste: {e}")
        return False
    finally:
        # Limpar recursos
        if engine:
            engine.cleanup()

if __name__ == "__main__":
    success = test_synthetic_engine()
    if success:
        print("\n‚úÖ‚úÖ‚úÖ Todos os testes conclu√≠dos com sucesso!")
        sys.exit(0)
    else:
        print("\n‚ùå‚ùå‚ùå Falha nos testes!")
        sys.exit(1)